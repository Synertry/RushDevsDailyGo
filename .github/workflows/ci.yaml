name: CI

on:
  push:
    branches: [ staging ]
    paths-ignore:
      - "README.md"
    # types:
    #   - opened
    #   - reopened
    #   - edited
    #   - synchronize

env:
  GOPROXY: https://proxy.golang.org
  GO111MODULE: on

# Cancel any in-progress CI runs for a PR if it is updated
concurrency:
  group: ${{ github.workflow }}-${{ github.event_name == 'pull_request' && github.head_ref || github.sha }}
  cancel-in-progress: true

jobs:
  build-setup:
    name: Setup Go environment
    runs-on: ubuntu-latest
    permissions:
      contents: read
    strategy:
      matrix:
        go-version: [ '1.18.x', '1.19.x' ]

    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          ref: staging

      - name: Setup Go ${{ matrix.go-version }}
        uses: actions/setup-go@v3
        with:
          go-version: ${{ matrix.go-version }}
          check-latest: true
          cache: true
          cache-dependency-path: |
            **/go.sum
            **/go.mod

      - name: Install dependencies
        run: go get .

      - name: Verify dependencies
        run: go mod verify

      - name: Cache go setup deps
        uses: actions/cache@v3
        with:
          path: |
            ~/.cache/go-build
            ~/go/pkg/mod
          key: staging-${{ runner.os }}-${{ matrix.go-version }}-go-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            staging-${{ runner.os }}-${{ matrix.go-version }}-go-

      # Run tests for each daily, only test in sub dirs
      - name: Test with the Go CLI
        run: go test -race ./Daily/...


  review-code:
    name: Review code
    runs-on: ubuntu-latest
    needs: build-setup
    permissions:
      # CodeQL requires this for all workflows
      security-events: write
      # only required for workflows in private repositories
      actions: read
      contents: read
    strategy:
      matrix:
        go-version: [ '1.18.x', '1.19.x' ]
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          ref: staging

      - name: Setup Go ${{ matrix.go-version }}
        uses: actions/setup-go@v3
        with:
          go-version: ${{ matrix.go-version }}
          check-latest: true
          cache: true
          cache-dependency-path: |
            **/go.sum
            **/go.mod

      - name: Cache go setup deps
        uses: actions/cache@v3
        with:
          path: |
            ~/.cache/go-build
            ~/go/pkg/mod
          key: ${{ runner.os }}-${{ matrix.go-version }}-go-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-${{ matrix.go-version }}-go-

      - name: Static code analysis
        uses: golangci/golangci-lint-action@v3
        with:
          version: latest

      # Initializes the CodeQL tools for scanning.
      - name: Initialize CodeQL
        uses: github/codeql-action/init@v2
        with:
          languages: go

      - name: Perform CodeQL Analysis
        uses: github/codeql-action/analyze@v2

      - name: Dependency Review
        uses: actions/dependency-review-action@v2
        with:
          fail-on-severity: high

  pull-request:
    name: Create Pull Request
    runs-on: ubuntu-latest
    permissions:
      contents: read
      pull-requests: write
      issues: write
    needs: review-code
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          ref: staging

      - name: Create Pull Request
        id: cpr
        uses: peter-evans/create-pull-request@v4
        with:
          token: ${{ secrets.PAT }}
          branch: staging
          base: main
          assignees: Synertry
          reviewers: Synertry
          title: 'Pull request ready for merge into production at ${{ github.event.repository.updated_at }}'
          body: This is an automated pull request to signal the completion of the staging branch steps.
          labels: |
            auto-pr
            release

      - name: Comment on Pull Request
        uses: peter-evans/create-or-update-comment@v1
        with:
          issue-number: ${{ steps.cpr.outputs.pull-request-number }}
          body: |
            This pull request was automatically created by GitHub Actions.
            It needs to be reviewed and approved before it can be merged into production.